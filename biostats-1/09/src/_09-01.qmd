---
title: "09-01, Restructuring your data"
format: 
  revealjs:
    slide-number: true
    embed-resources: true
editor: source
---

## Two different data structures

-   Wide format
    -   Group 1 in first column
    -   Group 2 in second column
-   Long format
    -   Group 1 in first $n_1$ rows
    -   Group 2 in remaining rows
    -   Could be different order or mixed
    -   Additional column for group

:::notes
There are two different data structures that you will encounter in research settings. The wide format places the data from each group in a different column. The long format places both groups in the same column, usually with the first group on the top and the second group on the bottom. It could be reversed, however, or it could be all jumbled together.

You will find that certain analyses are only available in the long format. Other analyses are only available in the wide format.

Being able to move from the wide format to the long format or vice versa is an important programming skill that you should learn early. I don't want to emphasize programming too much in this class, but I am making an exception here.
:::
  
## Hypothetical data in the wide format

```{r 09-01-wide}
#| message: false
#| warn: false
library(tidyverse)
wide_form <- tibble(
  trt=c(15, 13, 18, 19),
  pbo=c(34, 31, 36, NA))
wide_form
```

## Hypothetical data in the long format

```{r 09-01-long}
long_form <- tibble(
  id=c(1:4, 1:4),
  result=c(45, 43, 48, 49, 64, 61, 66, 62),
  exposed=c("n", "n", "n", "n", "y", "y", "y", "y"))
long_form
```

## Pivoting from wide form to long form

```{r 09-01-pivot-long}
#| echo: true
#| output-location: column
wide_form |>
  pivot_longer( 
    cols=c("trt", "pbo"), 
    names_to="intervention",
    values_to="outcome")
```

## Pivoting from long form to wide form

```{r 09-01-pivot-wide}
#| echo: true
#| output-location: column
long_form |>
  pivot_wider( 
    names_from=exposed,
    values_from=result)
```

