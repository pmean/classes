---
title: "11-01, Relationship between analysis of variance and linear regression"
format: 
  revealjs:
    slide-number: true
    embed-resources: true
editor: source
---

## Indicator variables, 1

-  Two levels is less complex with three or more levels
   -   R assigns 0 to first category (alphabetically)
   -   R assigns 1 to second category
   -   Examples:
       -   Female=0, Male=1
       -   Man=0, Woman=1
-  Interpretation
   -   Intercept is estimated average outcome for first category
   -   Slope is the estimated average change
       -   Second category average minus first category average
       
::: notes
Back in the previous modules, you saw a relationship between creating an indicator variable for a linear regression model and running a two-sample t-test. Just to review, when R sees a string that represents a categorical variable, it assigns the value of 0 to the level that appears first in alphabetical order and 1 to the level that appears last in alphabetical order. So a variable that has strings "male" and "female", R will assign 0 to "female" and 1 to "male". If the string were "man" and "woman", R would assign 0 to "man" and 1 to "woman".

The intercept represents the estimated average value of Y for the first or zero category. The slope represents the estimated average change in Y when you switch from the 0 category to the 1 category.
:::

## Example: Turtle experiment, 1

```{}
Sex     Fed  Fasted10  Fasted20
Male   42.8      42.4      38.9
Male   43.1      42.2      40.3
Male   40.4      40.8      37.5
Male   46.6      45.9      42.9
Female 42.2      42.4      39.7
Female 38.7      38.1      35.8
Female 35.3      34.3      32.3
Female 40.5      40.1      37.3
```

::: notes
Here is some data from a study of protein levels in turtles that are fed regularly and then subjected to short fasting periods. How would R assign an indicator variable for this data?
:::


## Turtle experiment, 2

```{}
Sex     Fed  Fasted10  Fasted20 Indicator
Male   42.8      42.4      38.9         1
Male   43.1      42.2      40.3         1
Male   40.4      40.8      37.5         1
Male   46.6      45.9      42.9         1
Female 42.2      42.4      39.7         0
Female 38.7      38.1      35.8         0
Female 35.3      34.3      32.3         0
Female 40.5      40.1      37.3         0
```

::: notes
R will assign 0 to the category level that appears first alphabetically, which is "Female". It assigns 1 to the category level that appears second alphabetically, which is "Male".
:::
## Indicator variables, 2

-  With k levels, you need k-1 indicators
   -   First indicator
        -   R assigns 1 to second category (alphabetically)
        -   R assigns 0 to all other categories
   -   Second indicator
        -   R assigns 1 to third category (alphabetically)
        -   R assigns 0 to all other categories
   -   And so on
-  Note: the first category in alphabetical order is zero for all indicator variables.
   
::: notes
If you have a categorical variable with more than 2 levels, you need more than 1 indicator. The number of indicators is always one less than the number of levels. So a category with 3 levels needs two indicators, a category with 6 levels needs 5 indicators.

How this is done in R differs from how it is done in SAS or SPSS. R looks at the alphabetical order. The first indicator is equal to 1 for the SECOND category level in alphabetical order. The next indicator is equal to 1 for the THIRD category level in alphabetical order. And so forth.

The way R defines things the first category level in alphabetical order is zero for each of the k-1 indicators.
:::

## Example with dietary cracker data

```{}
Cracker Digested
control 1772.84
bran    1752.63
combo   2121.97
gum     2558.61
gum     2026.91
bran    2047.42
combo   2254.75
control 2353.21
combo   2153.36
gum     2331.19
bran    2547.77
...

```

::: notes
This is a partial listing of a study of digested calorie counts for four differnt types of crackers: control, bran, combo, and gum. How would R assign indicator variables for this data?

With four levels, you need three indicator variables.
:::

## Dietary cracker data, first indicator variable

```{}
Cracker Digested i1
control 1772.84   0
bran    1752.63   0
combo   2121.97   1
gum     2558.61   0
gum     2026.91   0
bran    2047.42   0
combo   2254.75   1
control 2353.21   0
combo   2153.36   1
gum     2331.19   0
bran    2547.77   0
...

```

::: notes
If you put the category levels in alphabetical order (bran, combo, control, gum), then the second category level is "combo". The first indicator variable is 1 for "combo" and 0 for the other levels.
:::

## Dietary cracker data, second indicator variable

```{}
Cracker Digested i1 i2
control 1772.84   0  1
bran    1752.63   0  0
combo   2121.97   1  0
gum     2558.61   0  0
gum     2026.91   0  0
bran    2047.42   0  0
combo   2254.75   1  0
control 2353.21   0  1
combo   2153.36   1  0
gum     2331.19   0  0
bran    2547.77   0  0
...

```

::: notes
The third category level in alphabetical order is "control". The second indicator variable is assigned a value of 1 for "control" and 0 for the other category levels.
:::

## Dietary cracker data, third indicator variable

```{}
Cracker Digested i1 i2 i3
control 1772.84   0  1  0
bran    1752.63   0  0  0
combo   2121.97   1  0  0
gum     2558.61   0  0  1
gum     2026.91   0  0  1
bran    2047.42   0  0  0
combo   2254.75   1  0  0
control 2353.21   0  1  0
combo   2153.36   1  0  0
gum     2331.19   0  0  1
bran    2547.77   0  0  0
...

```

::: notes
The fourth category level in alphabetical order is "gum". The third indicator is assigned a value of 1 for "gum" and 0 for the other categories.

Notice that the category level that appears first  ("bran") is left out. You could assign an indicator for it, but that would lead to a redundancy. Once you see that the cracker is not "combo", "control", or "gum", then you know that it must be "bran".

The category level that is always zero is called the reference category.
:::

## Interpretation with multiple indicator variables

-   Intercept is estimated average outcome for first category
-   First slope is the estimated change
    -   Second category average minus first category average
-   Second slope is the estimated change
    -   Third category average minus first category average
-   And so on

::: notes
The interpretation of the regression estimates when you use multiple indicator variables is not too much different than your interpretation when you have a single indicator variable.

The intercept is the estimated average value of Y when all of the indicator variables are equal to zero. This is the estimated average value of Y for the reference level, which by default in R is the category level that appears first in alphabetical order.

The first slope represents an estimated change. It is the change when you move from the first category level to the second category level. This is essentially the difference between the second category level mean and the first category level mean.

The second slope also represents an estimated change, but for a different pair of categories. It is the difference between the third category level mean and the first category level mean.

This continues for any other indicator variables. Every comparison is a comparison to the reference level or the level that appears first in alphabetical order.
:::

## What if you want a different reference category?

Create your own indicator variables

```{}
dietary |>
  mutate(i1=as.numeric(Cracker=="bran")) |>
  mutate(i2=as.numeric(Cracker=="combo")) |>
  mutate(i3=as.numeric(Cracker=="gum")) -> dietary_1

```

or revise the order using the factor function.

```{}
new_order <- c("control", "bran", "combo", "gum")
dietary |>
  mutate(Cracker=factor(Cracker, levels=new_order)) -> dietary_2
lm()
```

::: notes
Now there is no special reason to make the first category level in alphabetical order the reference category. In the dietary cracker example, it may make more sense to compare every other cracker type to the "control" cracker type. This would require you to change the default in R. 

There are two ways to do this. First, you can create your own indicator variables. The code above shows that the first indicator, i1, is 1 for "bran" and 0 for the other categories. The second indicator, i2, is 1 for "combo" and 0 for the other categories. The third indicator, i3, is 1 for "gum" and 0 for the other categories. This make the "control" level the only level which is 0 for every indicator. The results will be that the slope associated with i1, the first indicator, represents the estimated average difference between "bran" and "control". The slope associate with i2 represents the estimated average difference between "combo" and "control". The slope associated with i3 represents the estimated average difference between "gum" and "control".

If you want R to create these indicator variables for you, list the category levels in a new order with the reference level being the first level in the list. Then use the factor function to assign this order, rather than an alphabetical order, to the category levels.
:::

## Example using fruitfly lifespans, 1

-   Experiment with 125 cages
    -   Does fruitfly mating affect average male lifespan?
    -   Isolate a male fruitfly with 
        -   one or eight virgin females, 
        -   one or eight pregnant females, or
        -   no females
    -   Note: males will not mate with pregnant females
    
::: notes
Here is an experiment, apparently a real experiment, looking at average lifespan for male fruitflies. Fruitflies have fairly short lifespans, making it easy to run experiments like this. 

The research question is whether mating or crowding affects the average lifetime of fruitflies.
:::

## Example using fruitfly lifespans, 2

-   Cages 1-25 have one male fruitfly, no female fruit flies
-   Cages 26-50 have one male fruitfly, one pregnant female
-   Cages 51-75 have one male fruitfly, one virgin female
-   Cages 76-100 have one male fruitfly, eight pregnant females
-   Cages 101-125 have one male fruitfly, eight virgin females

::: notes
There is an interesting series of experimental conditions. The male fruitfly in each of the first 25 cages is trapped alone and therefore not able to mate.

In the second set of cages, each male fruitfly shares a cage with a pregnant female fruitfly. Males will not mate with a pregnant female. So this serves as a second type of control group for the hypothesis that mating affects longevity. It also allows you test whether sharing a cage with another fly affects longevity.

In the third set of cages, the one male fruitfly shares the cage with a virgin female. By comparing this set to the first two sets, you can examine the hypothesis that mating decreases the average lifespan.

The fourth cage is where it gets really interesting. The one male fly shares a cage with EIGHT pregnant females. If there is an effect of crowding on longevity, surely you will see it here.

The first cage includes eight virgin flies with the one male fly. Lots of crowding and lots of opportunities for mating. It will be interesting to tabulate the results from this cage and compare it to the previous cage with eight pregnant females which has lots of crowding and no opportunities for mating. it will also be interesting to compare it to groups 2 and 3. The presence of only female fly means a lot less crowding. Finally, there is an interesting comparison to the first group, the group with no female flies and therefore no crowding.

:::

## Fruitfly lifespan boxplots

```{r}
#| label: 11-01-read-fruitfly-data
#| message: false
#| warning: false

library(broom)
library(tidyverse)
load("../data/fruitfly.RData")
```

```{r}
#| label: 11-01-boxplots
#| fig.width: 6
#| fig.height: 2.5

fly_1 |>
  ggplot(aes(cage, longevity)) +
    geom_boxplot() +
    ggtitle("Graph drawn by Steve Simon on 2024-10-23") +
    xlab("Cage residents") +
    ylab("Lifespan (days)") +
    coord_flip()
```

::: notes
Here are the boxplots of the five groups. Notice that R alphabetizes these groups. You can change this using the factor function as noted above.
:::

## Fruitfly lifespan group means

```{r}
#| label: 11-01-group-means

fly_1 |>
  group_by(cage) |>
  summarize(
    longevity_mn=mean(longevity),
    longevity_sd=sd(longevity),
    n=n())
```

::: notes
The means show the same pattern. The lifespans tend to be much lower in the cages with eight virgin females. The second lowest mean is with the cages with one virgin female. This tends to support the belief that it is mating rather than crowding that affects longevity.

The formal statistical models will be covered in the next video.
:::
