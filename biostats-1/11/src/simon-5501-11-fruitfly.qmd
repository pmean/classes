---
title: "Analysis of fruitfly data"
format: 
  html:
    embed-resources: true
---

This program reads data on fruit fly longevity. Find more information in the [data dictionary][dd].

[dd]: https://github.com/pmean/data/blob/master/files/fruitfly.yaml

This code was written by Steve Simon on 2024-10-23 and is placed in the public domain.

## Load the tidyverse library

```{r}

#| label: setup
#| message: false
#| warning: false

library(broom)
library(tidyverse)
```

For most of your programs, you should load the tidyverse library. The broom library converts your output to a nicely arranged dataframe. The messages and warnings are suppressed.

## List the variable names

```{r}
#| label: variable-list

fn <- "https://jse.amstat.org/datasets/fruitfly.dat.txt"
vlist <- c(
  "id",
  "partners",
  "type",
  "longevity",
  "thorax",
  "sleep")
```

#### Comments on the code

When a dataset does not have variables on the first line, you need to specify them in the code.

## Read the data and view a brief summary

```{r}
#| label: read

fly <- read_fwf(
  "../data/fruitfly.txt",
  col_types="nnnnnn",
  fwf_widths(
    widths=c(2, 2, 2, 3, 5, 3),
    col_names=vlist))
glimpse(fly)
```

#### Interpretation of the output

The fruitfly dataset has a fixed width format (fwf). You need to specify the 
columns that each variable uses.

## Create cage groups

```{r}
#| label: cage

fly$cage <- 
  case_when(
    fly$partners==0 & fly$type==9 ~ "No females",
    fly$partners==1 & fly$type==0 ~ "One pregnant female",
    fly$partners==1 & fly$type==1 ~ "One virgin female",
    fly$partners==8 & fly$type==0 ~ "Eight pregnant females",
    fly$partners==8 & fly$type==1 ~ "Eight virgin females")
```

#### Interpretation of the output

The five categories represent different combinations of partners and type.

## Calculate descriptive statistics

```{r}
#| label: longevity-means

fly |>
  group_by(cage) |>
  summarize(
    longevity_mn=mean(longevity),
    longevity_sd=sd(longevity),
    n=n())
```

#### Interpretation of the output

The mean lifespan is much lower for the eight virgin females group. The standard
deviations are reasonably small and more or less consistent across all groups.

## Draw boxplot

```{r}
#| label: longevity-boxplot
#| fig.width: 6
#| fig.height: 2.5

fly |>
  ggplot() +
  aes(cage, longevity) +
  geom_boxplot() +
  labs(
    caption="Steve Simon, 2024-10-23, CC0",
    x="Lifespan (days)",
    y="Cage residents")
```

#### Interpretation of the output

The boxplot shows a roughly normal distribution with no outliers.

## One factor analysis of variance for longevity

```{r}
#| label: longevity-one-factor-anova

m1 <- aov(longevity ~ cage, data=fly)
tidy(m1)
```

#### Interpretation of the output

The F-ratio is large and the p-value is small. Conclude that there is a 
difference among some or all of the population mean lifespans.

## Linear model for longevity, 1

```{r}
#| label: longevity-lm-1

m2 <- lm(longevity ~ cage, data=fly)
anova(m2)
```

#### Interpretation of the output

You can use linear regression to reach the same conclusion. The sums of squares,
degrees of freedom, F-ratio, and p-value all match.

## Linear model for longevity, 2

```{r}
#| label: longevity-lm-2

tidy(m2)
```

#### Interpretation of the output

The linear model creates indicator variable for four out of the five category
levels. The regression slopes represent the estimated average difference in 
means between each category and the reference category.

## Linear model for longevity, 3

```{r}
#| label: longevity-lm-3

fly |>
  group_by(cage) |>
  summarize(longevity_mn=mean(longevity)) |>
  mutate(reference_mn=first(longevity_mn)) |>
  mutate(mean_difference=longevity_mn-reference_mn)
```

#### Interpretation of the output

This table shows how to interpret the intercept and the four slope terms. The
intercept is the estimated average lifespan for the first level of the 
categorical variable. The slope terms are the estimated average changes from the
other levels of the categorical variable and the first level.

## Re-order cage groups, 1

```{r}
#| label: re-order-1

fly$cage_1 <- 
  factor(
    fly$cage,
    levels = c(
      "No females",
      "One pregnant female",
      "Eight pregnant females",
      "One virgin female",
      "Eight virgin females"))
```

#### Interpretation of the output

Compare every category to the No females category (the control condition).

## Re-order cage groups, 2

```{r}
#| label: re-order-2

m3 <- lm(longevity ~ cage_1, data=fly)
tidy(m3)
```

#### Interpretation of the output

There is one group, eight virgin females, that is statistically significantly
different from the no female control group.

## Log transformation, 1

```{r}
#| label: log-longevity-anova-1

fly |>
  mutate(log_longevity=log10(longevity)) -> log_fly

m3 <- aov(log_longevity ~ cage, data=log_fly)
tidy(m3)
```

#### Interpretation of the output

Although there are no problems with heterogeneity or non-normality, here is an 
illustration of how to use a log transformation with analysis of variance.

## Log transformation, 2

```{r}
#| label: log-longevity-anova-2

t3 <- TukeyHSD(m3, ordered=TRUE)
t3
```

#### Interpretation of the output

## Log transformation, 3

```{r}
#| label: log-longevity-anova-3

t3$cage |>
  data.frame() |>
  select(diff, lwr, upr) |> 
  mutate(
    diff=10^diff,
    lwr=10^lwr,
    upr=10^upr)
```

#### Interpretation of the output

## Log transformation, 4

```{r}
#| label: log-longevity-anova-4

t3$cage |>
  data.frame() |>
  select(diff, lwr, upr) |> 
  mutate(
    diff=10^(-diff),
    upr=10^(-lwr),
    lwr=10^(-upr))
```

#### Interpretation of the output

## Kruskal-Wallis test

```{r}
#| label: kw

kruskal.test(longevity ~ cage, data=fly)
```

#### Interpretation of the output

It may not be needed with this particular dataset, but this is an illustration
of how to use the Kruskal-Wallis test. 

## Save important files for later use

```{r}
#| label: save

save(
  fly,
  log_fly,
  file="../data/fruitfly.RData")
```
