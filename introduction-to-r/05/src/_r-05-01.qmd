---
title: "r-05-01, The FEV data set"
format: 
  revealjs:
    slide-number: true
    embed-resources: true
editor: source
---

```{r}
#| label: 05-01-setup
#| message: false
#| warning: false

library(glue)
library(tidyverse)
library(yaml)

load("../data/demo-05.RData")
load("../data/module-05.RData")
``` 

## A quick note on a side topic, 1

-   Creating "nice" tables is difficult
    -   Round aggressively
    -   Include title at top
    -   Add explanatory material at bottom
    -   Use descriptive row and column names
    -   Use shading and borders
    
::: notes

I have been struggling for the past two years to settle on an approach for creating nice tables in R. The word "nice" means several things.

First, your tables should round aggressively. Two significant figures in most cases. Sometimes three significant figures if a number is close to a power of 10.

Every table should have a title.

:::

## A quick note on a side topic, 2

-   Your options
    -   Cut and paste into Word/Excel
        -   Fast
        -   WYSIWG
        -   Revisions are painful
    -   Create nice table in R
        -   Slow
        -   Every change requires a re-rendering
        -   Revisions are easy
        
## A quick note on a side topic, 3

-   Many R packages for nice tables
    -   David Keyes. How to make beautiful tables in R. R for the rest of us blog, 2019-11-12. Available in [html format][ref-keyes-2019].
-   I will use gt library in this demo
    -   Short for "Grammar of tables"
    -   Uses a layered approach like ggplot2
-   Use in this class is recommended, but not required.
    
[ref-keyes-2019]: https://rfortherestofus.com/2019/11/how-to-make-beautiful-tables-in-r
    -   kable, kableExtra
    -   gt

## How do you characterize relationships?

+ Between two continuous variables
  + Correlations and scatterplots
+ Between two categorical variables
  + Crosstabulations
+ Between a continuous variable and a categorical variable
  + Boxplots
  
::: notes

In an earlier module, you saw datasets that had mostly continuous variables. If you wanted to examine the relationship between two continuous variables, you would look at correlations and scatterplots.

Then in a different module, you saw datasets that had mostly categorical variables. If you wanted to examine the relationship between two categorical variables, you would look at crosstabulations.

In this module, you will see datasets that have a mix of continuous and categorical variables. If you want to examine the relationship between a continuous variable and a categorical variable, you would use a boxplot.

:::

## FEV data

```{r}
#| label: 05-01-yaml

f1 <- "https://raw.githubusercontent.com"
f2 <- "pmean/data/refs/heads/main/files"
f3 <- "fev.yaml"

dd <- read_yaml(glue("{f1}/{f2}/{f3}"))
```

`r dd$description`

::: notes

The fev data set looks at pulmonary function in a group of children. The acronym FEV stands for Forced Expiratory Volume and represents how air you can blow out of your lungs.

This dataset has 654 rows and 5 variables: age (in years), fev (in liters), height (in inches), sex, and smoking status. Both sex and smoking status are categorical and use number codes. 

:::


## read in the FEV data set, glimpse

```{r}
#| label: 05-01-glimpse

glimpse(pulmonary)
```

::: notes

Here is a glimpse of the data.

:::

## Verify that there are no missing values

`r code[["missing"]]`

## Create factors

`r code[["factors"]]`

## Summary for continuous variables: age

`r code[["age"]]`

## Summary for continuous variables: fev

`r code[["fev"]]`

## Summary for continuous variables: ht

`r code[["ht"]]`

## Summary for categorical variables: sex

`r code[["sex"]]`

## Summary for categorical variables: smoke

`r code[["smoke"]]`
