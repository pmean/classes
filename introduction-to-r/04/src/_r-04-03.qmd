---
title: "r-04-03, Factors and crosstabulations"
format: 
  revealjs:
    slide-number: true
    embed-resources: true
editor: source
---

```{r}
#| label: 04-02-setup
#| message: false
#| warning: false

library(glue)
library(tidyverse)
```

## Crosstabulation

```{r}
#| label: hypothetical-2

hypo_2 <- tibble(
  intervention=rep(c("c", "c", "t", "t"), 1:4),
  result=rep(c("f", "s", "f", "s"), 1:4)
)

hypo_2
```

::: notes

Here is a simple hypothetical data set. The variable "intervention" represents whether a patient was a "c" or a "t". Think of this as control and treatment. The variable "result" represents whether the patient was an "f" or an "s". Maybe think of this as failure and success. The first row represents the single patient that is a "cf" or a control failure. The last four rows represent patients that are a "ts" or a treatment success.

:::

##

```{r}
#| echo: true
#| label: 04-03-xtabs-1

hypo_2 |>
  count(intervention, result)
```

::: notes

A crosstabulation shows counts across the combination of two different categorical variables. Only one patient was a control failure, two were control successes, three were treatment failures and four were treatment successes.

:::

```{r}
#| echo: true
#| label: 04-03-xtabs-2

hypo_2 |>
  count(result, intervention)
```

::: notes

There is a subtle change when you switch the order of the two arguments in the count function, but the data is essentially equivalent.

:::

## Rectangular layout, 1

```{r}
#| label: 04-03-rectangle-1

hypo_2 |>
  count(intervention, result) |>
  pivot_wider(
    names_from=intervention,
    values_from=n)
```

::: notes

Most other programs arrange the counts automatically in a rectangular grid. In this case where you have two levels for each categorical variable, it would be a square grid, but that's a nitpick.

R is a minimalist package and you have to convert the counts from a single column to a rectangular grid with an extra function, pivot_wider.

:::

## Rectangular layout, 2

```{r}
#| label: 04-03-rectangle-2

hypo_2 |>
  count(intervention, result) |>
  pivot_wider(
    names_from=result,
    values_from=n)
```


## Conditional probabilities, 1

## Conditional probabilities, 2
