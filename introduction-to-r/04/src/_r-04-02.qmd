---
title: "r-04-02, Counts, proportions, and percentages"
format: 
  revealjs:
    slide-number: true
    embed-resources: true
editor: source
---

## Categorical versus continuous variables

+ Categorical
  + Small number of possible values
  + Each value has a name or label
+ Continuous
  + Large number of possible values
  + Potentially any value in a range.
  
::: notes

A categorical variable is defined (loosely) as a variable that has a small number of possible values. Each value is usually associated with a particular category or label. In contrast, a continuous variable is defined as a variable that has a large number of possible values, potentially any value in a particular interval.

In a previous module, almost all of the variables that you used were continuous. Today, almost all of the variables that you will use will be categorical.

The distinction between continuous and categorical variables is important in deciding what types of descriptive and inferential statistics you should use. But, there is often gray and fuzzy line between categorical and continuous variables. Don't worry too much about this today. If you're not sure whether a variable is categorical or continuous, try some simple descriptive statistics and graphs appropriate for categorical data and then try some simple descriptive statistics and graphs for continuous data. You will usually figure out quickly whether treating your variable as categorical or continuous makes the most sense.

:::

## Counts and percentages, 1

```{r}
#| echo: true
#| label: 04-01-counts-1

ti |>
  count(pclass)
```

::: notes

For categorical variables, you should first get frequency counts. A mean and standard deviation are usually meaningless for categorical data.

Unlike most other statistical packages, R tends to have a minimalist approach to statistics. If you asked for frequency counts in SAS or SPSS, these systems would automatically add percentages. R doesn't add percentages automatically.

This is something that you will either love or hate. You might think that SAS and SPSS are more thoughtful because almost every time you want a count, you'd also want the corresponding percentage. Or you might find it annoying to tell those programs to not clutter up your output with information you didn't want.

Personally, I don't like software deciding for me what I want. I'd rather ask for percentages explicitly when I need them rather than have them come as the default.

Now this is a rather trivial issue, but it does illustrate an important difference in philosophy. R makes you ask for the extras that you might need. SAS and SPSS force you to ask to NOT include things that they think are important.

:::

## Counts and percentages, 2

```{r}
#| echo: true
#| label: 04-01-counts-2

ti |>
  count(pclass) |>
  mutate(total=sum(n)) |>
  mutate(pct=100*n/total)
```

::: notes

Most other programs will compute percentages automatically or as part of the same procedure that gave you the counts. As I have mentioned many times, R takes a minimalist approach. It gives you counts with one function but if you want percentages, you have to ask for it. In this example, you add a couple of mutate functions.

:::

## Counts and percentages, 3

```{r}
#| echo: true
#| label: 04-01-counts-3

ti |>
  count(pclass) |>
  mutate(total=sum(n)) |>
  mutate(pct=100*n/total) |>
  mutate(pct=glue("{n}/{total} ({round(pct)}%)")) |>
  select(-n, -total)
```

::: notes

Another nice feature of R is that if you don't like what the output looks like, you have many different ways to improve on it.

:::


```{r table-addmargins}
PClass_total <- 
  addmargins(PClass_missing)
PClass_total
```

::: notes

You can add a total count to the frequency table with the addmargins function.

:::

