---
title: "simon-5502-12-demo"
format: 
  html:
    embed-resources: true
editor: source
execute: 
  error: false
---

## File details

[Jump](#ref-1)

This program was written by Steve Simon on 2025-04-12 and is placed in the public domain. You can use this program any way you please.

-   Data used in this program
    -   hiv-intervention
        -   [tab delimited file][ref-hiv-nodate]
        -   [dictionary][ref-hiv-dd-nodate]
-   Tibbles created by this program
    -   hiv: Original data from hiv-intervention.csv
    -   hiv_1: Add subject id
    -   hiv_2: Restructure to long format
    -   hiv_3: Drop the pre measurement and controls
-   Models created by this program
    -   m1: Random intercepts model
    -   m2: Random slopes model

[ref-hiv-nodate]: https://github.com/pmean/data/blob/main/files/hiv-intervention.txt
[ref-hiv-dd-nodate]: https://github.com/pmean/data/blob/main/files/hiv-intervention.yaml

```{r}
#| message: false
#| warning: false
#| label: setup

library(lme4)
library(tidyverse)

R.version.string
Sys.Date()
```

------------------------------Begin part 1--------------------------------------

## Read hiv-intervention

```{r}
#| label: read

hiv <- read_tsv(
  file="../data/hiv-intervention.txt",
  col_types="nnnnn",
  col_names=TRUE)

glimpse(hiv) 
```

## Add subject id

```{r}
#| label: add-id

n <- nrow(hiv)
hiv |>
  mutate(id=1:n) -> hiv_1

glimpse(hiv_1)
```

## Switch to long format

```{r}
#| label: long

hiv_1 |>
  pivot_longer(
    cols=Pre:FU12,
    names_to="t",
    values_to="protected_sex") |>
  mutate(t=case_when(
    t=="Pre"  ~ -6,
    t=="Post" ~  0,
    t=="FU6"  ~  6,
    t=="FU12" ~ 12)) -> hiv_2

glimpse(hiv_2)
```

## Plot individual subjects for treatment group

```{r}
#| label: plot-1

hiv_2 |>
  filter(BST == 1) |>
  ggplot() +
  aes(x=t, y=protected_sex) +
  geom_point() +
  geom_line() +
  ggtitle("Plot drawn by Steve Simon on 2025-04-12") +
  xlab("Time in months") +
  ylab("Rate of using protected sex") +
  scale_x_continuous(breaks=c(-6, 0, 6, 12)) +
  facet_wrap(~ id, ncol=5) -> plot_1

plot_1
```

#### Comment on the code

The [facet_wrap][ref-facet-nodate] function is part of the [ggplot2][ref-ggplot2-nodate] library. It creates a series of small plots based on a subsetting variable. By default, the plots use the same scale on the X and Y axis.

[ref-facet-nodate]: https://ggplot2.tidyverse.org/reference/facet_wrap.html
[ref-ggplot2-nodate]: https://ggplot2.tidyverse.org/

#### Interpretation of the output

This graph and the one that follows show a rather chaotic state with no obvious trend or pattern across multiple patients. This leads a decision later on in this program to analyze a small subset of the data with the hope that something might emerge in that simplified setting.

## Plot individual subjects for control group

```{r}
#| label: plot-2

hiv_2 |>
  filter(BST == 0) |>
  ggplot() +
  aes(x=t, y=protected_sex) +
  geom_point() +
  geom_line() +
  scale_x_continuous(breaks=c(-6, 0, 6, 12)) +
  ggtitle("Plot drawn by Steve Simon on 2025-04-12") +
  xlab("Time in months") +
  ylab("Rate of using protected sex") +
  facet_wrap(~ id, ncol=5) -> plot_2

plot_2
```

## Drop the pre  and controls

```{r}
#| label: drop

hiv_2 |>
  filter(t != -6) |>
  filter(BST != 0) -> hiv_3
```

## Fit a random intercepts model

```{r}
#| label: random-intercepts

m1 <- lmer(
  protected_sex ~ t + (1 | id),
  data=hiv_3)

summary(m1)
```

#### Comments on the code

The formula in the lmer function is very similar to the formulas that were used in the previous module. The only distinction between a random intercepts model and the models used earlier (within cluster analysis and the between cluster analysis) is that the independent variable (t) is continuous rather than categorical.

#### Interpretation of the output

There is substantial variation in the random intercepts. The intraclass correlation is 69.57 / (69.57 + 53.34) = 0.57.

The intercept, 22.3 represents the estimated average rate of protected sex at the start of the intervention (when t=0). It is unclear what the units of measurement are for this mean. The slope, -0.22,  represents the estimated average change in the rate of protected sex for each additional month. At the end of the study (12 months), the rate has declined by -0.22 * 12 = -2.64. The t-statistic is close to zero, so you should accept the null hypothesis that the slope is flat (no change over time).

------------------------------Begin part 2--------------------------------------

## Predictions, residuals, and random effects

```{r}
#| label: predict

m1_predicted <- predict(m1)
m1_residuals <- resid(m1)
m1_random_effects <- ranef(m1)
```

#### Comments on the code

There is some ambiguity in what represents a predicted value. The default in the predict function is to take the estimated intercept and slope plus the estimated random intercept for a particular cluster.

The [ranef][ref-ranef-nodate] function is part of the lme4 library. It extracts estimates of the random effect. In this case, this would be the random intercepts.

## Plot of predicted values

```{r}
#| label: plot_3

hiv_3 |>
  ggplot() +
  aes(x=t, y=protected_sex) +
  geom_point() +
  geom_line(y=m1_predicted) + 
  scale_x_continuous(breaks=c(0, 6, 12)) +
  ggtitle("Plot drawn by Steve Simon on 2025-04-12") +
  xlab("Time in months") +
  ylab("Rate of using protected sex") +
  facet_wrap(~ id, ncol=5) -> plot_3

plot_3
```

#### Interpretation of the output

The predicted values show a nearly flat line with only a small decrease over time. Notice how allowing each subject to have a different intercept leads to reasonable fits for at least some of the subjects.

## Check linearity

```{r}
#| label: plot_4

hiv_3 |>
  select(t) |>
  bind_cols(tibble(m1_residuals)) |>
  ggplot() +
  aes(x=t, y=m1_residuals) +
  scale_x_continuous(breaks=c(0, 6, 12)) +
  geom_point() -> plot_4

plot_4
```

#### Comments on the code

In order to plot the residuals versus t, you must put both of them in the same data frame or tibble. There are several ways to do this. The [bind_cols][ref-bind-nodate] function will merge two data frames or tibbles side by side. They must have the same number of rows and the same order. The bind_cols function gets a bit confused when you are binding a vector, which is why you should convert the vector using the [tibble][ref-tibble-nodate] function.

[ref-bind-nodate]: https://dplyr.tidyverse.org/reference/bind_cols.html
[ref-tibble-nodate]: https://tibble.tidyverse.org/reference/tibble.html

#### Interpretation of the output

There is no obvious deviation from linearity in this graph. It looks like the 6 month value shows a bit less variability than the other time points, but this does not seem to be too serious.

## Check normality of residuals

```{r}
#| label: plot_5

tibble(m1_residuals) |>
  ggplot() +
  aes(sample=m1_residuals) +
  ggtitle("Plot drawn by Steve Simon on 2025-04-12") +
  xlab(" ") +
  ylab("Within subject residuals") +
  geom_qq() -> plot_5

plot_5
```

#### Comments on the code

The ggplot function expects to see a data frame or a tibble and m1_residuals is a vector. The [tibble][ref-tibble-nodate] function converts the vector into a tibble.

[ref-tibble-nodate]: https://tibble.tidyverse.org/reference/tibble.html

#### Interpretation of the output

There appears to be an outlier on the low end, but it is not too extreme. Otherwise the random intercepts appears to be fairly close to a normal distribution.

## Check normality of random intercepts

```{r}
#| label: plot_6

tibble(x=unlist(m1_random_effects)) |>
  ggplot() +
  aes(sample=x) +
  ggtitle("Plot drawn by Steve Simon on 2025-04-12") +
  xlab(" ") +
  ylab("Estimated random intercepts") +
  geom_qq() -> plot_6

plot_6
```

#### Interpretation of the output

There is another outlier, but not too extreme among the residuals. Beyond that, the residuals appear to be fairly close to a normal distribution.

## Save everything

```{r}
#| label: save

save.image(file="../data/demo_12.RData")
```

## References

<a id="ref-1"></a>Reference #1.
