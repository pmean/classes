---
title: "simon-5502-06-demo"
format: 
  html:
    embed-resources: true
editor: source
execute: 
  error: false
---

## Start part 1

## File details

This program was written by Steve Simon on 2025-02-23 and is placed in the public domain. You can use this program any way you please.

There is one data files used in this program

-   titanic, [Tab delimited file][ref01], [dictionary][ref02]

[ref01]: https://github.com/pmean/data/blob/main/files/titanic.txt
[ref02]: https://github.com/pmean/data/blob/main/files/titanic.yaml

```{r}
#| label: setup
#| message: false
#| warning: false

library(broom)
library(epitools)
library(glue)
library(tidyverse)

R.version.string
Sys.Date()

sv <- NULL # tables and graphs for later use
```


## Intermediate files

-   titanic: Original data from titanic.txt
-   titanic_1: Create factor for Survived
-   titanic_2: Create indicator variables

## Saved output

-   sv
    -   table1: crosstabulation of Sex with Survived
    -   prop1: proportions by sex from table1
    -   prop_test: test for difference in proportions
    -   chisq: Chi-square test of independence
    -   fisher: Fisher's Exact Test
    -   or: Odds ratio with confidence intervals

## Read Titanic data

```{r}
#| label: ti-read

ti <- read_tsv(
  file="../data/titanic.txt",
  col_names=TRUE,
  col_types="ccncn",
  na="NA")
glimpse(ti) 
```

## Add factors

```{r}
#| label: ti-factors
lab1 <- c("Died", "Survived")
lab2 <- c("3rd", "2nd", "1st")

ti |> 
  mutate(
    Survived =
      factor(
    		Survived,
		    levels=1:0,
		    labels=c("Yes", "No"))) |>
  mutate(
    PClass = 
      factor(
        PClass,
        levels=lab2))-> ti_1
```

## Get counts of sex by survival

```{r}
#| label: ti-counts
sv$table1 <-xtabs(~Sex+Survived, data=ti_1)
sv$table1
```

#### Interpretation of the output

Normally, I would include interpretations here, but this is a review of last semester. Refer to simon-5501-13-titanic for the proper interpretations for the output in part 1 of this program.

## Get proportions for died/survived by sex

```{r}
#| label: ti-proportions
sv$table1 |>
  proportions("Sex") -> sv$prop1
sv$prop1
```

## Bar chart

```{r}
#| label: ti-bar
ti_1 |>
  ggplot() +
    aes(x = Sex, fill = Survived) +
    geom_bar(position = "fill") +
	  xlab("Sex") +
	  ylab("Proportion") +
	  ggtitle("Graph drawn by Steve Simon on 2024-11-11")
```

## Hypothesis test for two proportions

```{r}
#| label: ti-equality-of-proportions
sv$prop_test <- prop.test(sv$table1, correct=FALSE)
sv$prop_test |> tidy()
```

## Chi-squared test

```{r}
#| label: chi-square-test
sv$chisq <- chisq.test(sv$table1, correct=FALSE)
sv$chisq |> tidy()
```

## Fisher's Exact test

```{r}
#| label: fishers-exact
sv$fisher <- fisher.test(sv$table1)
sv$fisher |> tidy()
```

## Odds ratio calculation

```{r}
#| label: odds-ratio
sv$or <- oddsratio(sv$table1)
sv$or 
```

## Start part 2

## Descriptive statistics for Sex

```{r}
#| label: ti-sex-pct

ti_1 |>
	count(Sex) |>
	mutate(total=sum(n)) |>
	mutate(pct=round(100*n/total)) |>
  mutate(pct=glue("{pct}% ({n}/{total})")) |>
  select(-n, -total) -> sv$sex_pct
sv$sex_pct
```

#### Interpretation of the output

Slightly more than one-third of the passengers were female.

## Descriptive statistics for PClass

```{r}
#| label: ti-pclass-pct

ti_1 |>
	count(PClass) |>
	mutate(total=sum(n)) |>
	mutate(pct=round(100*n/total)) |>
  mutate(pct=glue("{pct}% ({n}/{total})")) |>
  select(-n, -total) -> sv$pclass_pct
sv$pclass_pct
```

#### Interpretation of the output

Slightly more than half of the passengers were in third-class.

## Descriptive statistics for Survived

```{r}
#| label: ti-survived-pct

ti_1 |>
	count(Survived) |>
	mutate(total=sum(n)) |>
	mutate(pct=round(100*n/total)) |>
  mutate(pct=glue("{pct}% ({n}/{total})")) |>
  select(-n, -total) -> sv$survived_pct
sv$survived_pct
```

#### Interpretation of the output

Slightly more than one-third of the patients survived.

## Proportion Survived=No by Sex

```{r}
#| label: ti-died-by-sex

ti_1 |>
	count(Sex, Survived) |>
  group_by(Sex) |>
	mutate(total=sum(n)) |>
	mutate(pct=round(100*n/total)) |>
  mutate(odds=round(n/(total-n), 2)) |>
  mutate(pct=glue("{pct}% ({n}/{total})")) |>
  filter(Survived=="No") |>
  select(-n, -total) -> sv$died_by_sex
sv$died_by_sex
```

## Proportion Survived=Yes by Sex

```{r}
#| label: ti-died-by-sex

ti_1 |>
	count(Sex, Survived) |>
  group_by(Sex) |>
	mutate(total=sum(n)) |>
	mutate(pct=round(100*n/total)) |>
  mutate(odds=round(n/(total-n), 2)) |>
  mutate(pct=glue("{pct}% ({n}/{total})")) |>
  filter(Survived=="Yes") |>
  select(-n, -total) -> sv$survived_by_sex
sv$survived_by_sex
```

## Logistic model using Sex to predict Survived

```{r}
#| label: logistic-1

m1 <- glm(Survived~Sex, family="binomial", data=ti_1)
tidy(m1)
```

#### Comment on the code

#### Interpretation of the outpt

## Logistic model using PClass to predict Survived

```{r}
#| label: logistic-2

m2 <- glm(Survived~PClass, family="binomial", data=ti_1)
tidy(m2)
```

## Logistic model with interaction

```{r}
#| label: logistic-2

m2 <- glm(Survived~Sex*PClass, family="binomial", data=ti_1)
tidy(m2)
```

## Save everything

```{r}
#| label: save
save(
  sv,
  ti,
  ti_1,
  file="../data/module06.RData")
```