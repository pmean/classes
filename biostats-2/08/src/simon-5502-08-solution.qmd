---
title: "simon-5502-08-solution"
format: 
  html:
    embed-resources: true
editor: source
execute: 
  error: true
---

## General directions

Use the dataset, [whas500.dat][ref-whas], found on my github site. Refer to the [data dictionary][ref-whas-dd] if needed. You may find it helpful to adapt some of the code from [simon-5502-08-demo.qmd][ref-08-demo]. 


[ref-whas]: https://github.com/pmean/data/blob/main/files/whas500.dat
[ref-whas-dd]: https://github.com/pmean/data/blob/main/files/whas500.yaml
[ref-08-demo]: https://github.com/pmean/classes/blob/master/biostats-2/08/src/simon-5502-08-demo.qmd

## File details

Please do not look at this file before submitting your own work on this programming assignment. Although no interpretations are provided here, you must include them in your own submission.

This program was written by Steve Simon on 2025-02-27 and is placed in the public domain. You can use this program any way you please.

## Program outline

-   simon-5502-08-solution
    -   created: 2025-03-19
    -   copyright: public domain
    -   reads
        -   whas500.dat,[Tab delimited file][ref-whas], [dictionary][ref-whas-dd]
    -   creates
        -   whas, original data from whas500.dat
    -   computes
        -   Kaplan-Meier curve
    -   produces
        -   html output


[ref-whas]: https://github.com/pmean/data/blob/main/files/whas500.dat
[ref-whas-dd]: https://github.com/pmean/data/blob/main/files/whas500.yaml

## Introduction

```{r}
#| label: setup
#| message: false
#| warning: false

library(ggfortify)
library(glue)
library(lubridate)
library(survival)
library(tidyverse)

R.version.string
Sys.Date()
```

## Read the data

```{r}
#| label: read

#| label: whas-read

whas_names <- c(
  "id",
  "age", 
  "gender",
  "hr",
  "sysbp",
  "diasbp",
  "bmi",
  "cvd",
  "afb",
  "sho",
  "chf",
  "av3",
  "miord",
  "mitype",
  "year",
  "admitdate",
  "disdate",
  "fdate",
  "los",
  "dstat",
  "lenfol",
  "fstat",
  "not_needed")

whas <- read_table(
  file="../data/whas500.dat",
  col_types="nnnnnnnnnnnnnnncccnnnnn",
  col_names=whas_names)

glimpse(whas) 
```

## Convert dates

```{r}
#| label: dates

whas |>
  select(-not_needed) |>
  mutate(admitdate=mdy(admitdate)) |>
  mutate(disdate=mdy(disdate)) |>
  mutate(fdate=mdy(fdate)) -> whas_1
```

## Remove patients who died in the hospital

```{r}
#| label: remove

whas_1 |>
  filter(dstat != 1) -> whas_3
```

## Convert days to years

```{r}
#| label: convert

whas_3 |>
  mutate(lenfol=lenfol/365.25) -> whas_4
```


## Comparison of two or more survival curves

```{r}
#| label: km-gender-

m1 <- survfit(
  Surv(lenfol, fstat) ~ chf,
  data=whas_4)

autoplot(m1, conf.int=FALSE) +
  ggtitle("Graph drawn by Steve Simon on 2025-03-10") +
  xlab("Survival time (days)") +
  ylab("Percentage survived") -> km_by_chf

km_by_chf
```

## Log rank test

```{r}
#| label: log-rank

survdiff(
  Surv(lenfol, fstat) ~ chf,
  data=whas_4) -> log_rank_chf

log_rank_chf
```

## Start part 3 ----------------------------------------------------------------

## Cox proportional hazards test for chf

```{r}
coxph(
  Surv(lenfol, fstat) ~ chf,
  data=whas_4) -> cox_chf

cox_chf
```

## Comparison of ages

```{r}
#| label: comparison

whas_4 |>
	group_by(chf) |>
	summarize(age_mean=mean(age)) -> table_mean_age_by_chf

table_mean_age_by_chf
```

## Test for gender, adjusting for age

```{r}
coxph(
  Surv(lenfol, fstat) ~ chf + age,
  data=whas_4) -> cox_adjusted

cox_adjusted
```

